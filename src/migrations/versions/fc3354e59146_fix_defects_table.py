"""Fix defects table

Revision ID: fc3354e59146
Revises: 7a8cfea874a5
Create Date: 2025-07-25 13:59:18.449718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fc3354e59146'
down_revision: Union[str, None] = '7a8cfea874a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level_number', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('primary_usage', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_building_level_is_deleted'), 'building_level', ['is_deleted'], unique=False)
    op.drop_index(op.f('ix_token_blacklist_token'), table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.drop_index(op.f('ix_building_side_building_id'), table_name='building_side')
    op.alter_column('buildings', 'project_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_buildings_project_id'), 'buildings', ['project_id'], unique=False)
    op.create_foreign_key(None, 'buildings', 'projects', ['project_id'], ['id'])
    op.create_unique_constraint(None, 'defects', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'defects', type_='unique')
    op.drop_constraint(None, 'buildings', type_='foreignkey')
    op.drop_index(op.f('ix_buildings_project_id'), table_name='buildings')
    op.alter_column('buildings', 'project_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_building_side_building_id'), 'building_side', ['building_id'], unique=False)
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blacklist_pkey'))
    )
    op.create_index(op.f('ix_token_blacklist_token'), 'token_blacklist', ['token'], unique=True)
    op.drop_index(op.f('ix_building_level_is_deleted'), table_name='building_level')
    op.drop_table('building_level')
    # ### end Alembic commands ###
