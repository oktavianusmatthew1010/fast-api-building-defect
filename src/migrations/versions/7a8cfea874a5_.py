"""empty message

Revision ID: 7a8cfea874a5
Revises: 8e8c0d6c644c
Create Date: 2025-07-03 01:51:25.867119

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7a8cfea874a5'
down_revision: Union[str, None] = '8e8c0d6c644c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_token_blacklist_token'), table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.drop_index(op.f('ix_friends_friend_id'), table_name='friends')
    op.drop_index(op.f('ix_friends_is_deleted'), table_name='friends')
    op.drop_index(op.f('ix_friends_user_id'), table_name='friends')
    op.drop_table('friends')
    op.create_unique_constraint(None, 'defect_type', ['id'])
    op.create_unique_constraint(None, 'defects', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'defects', type_='unique')
    op.drop_constraint(None, 'defect_type', type_='unique')
    op.create_table('friends',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], name=op.f('friends_friend_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('friends_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('friends_pkey'))
    )
    op.create_index(op.f('ix_friends_user_id'), 'friends', ['user_id'], unique=False)
    op.create_index(op.f('ix_friends_is_deleted'), 'friends', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_friends_friend_id'), 'friends', ['friend_id'], unique=False)
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blacklist_pkey'))
    )
    op.create_index(op.f('ix_token_blacklist_token'), 'token_blacklist', ['token'], unique=True)
    # ### end Alembic commands ###
